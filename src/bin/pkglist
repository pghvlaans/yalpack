#!/bin/sh
#
# pkglist: lists packages (made by pkgmake and installed by pkginst) for LFS
# systems
#
# Copyright 2021 K. Eugene Carlson  Tsukuba, Japan
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Providing a list of installed packages with versioning information

unset HEAD
unset VARBKUP
unset ROOTHOME
unset TMP
unset SBINDIR

CHOME=/etc/yalpack.conf
HEAD="$(grep -m 1 HEAD\= "$CHOME" | cut -d'=' -f2-)"
VARBKUP="$(grep -m 1 VARBKUP\= "$CHOME" | cut -d'=' -f2-)"
ROOTHOME="$(grep -m 1 ROOTHOME\= "$CHOME" | cut -d'=' -f2-)"
TMP="$(grep -m 1 TMP\= "$CHOME" | cut -d'=' -f2-)"
SBINDIR="$(grep -m 1 SBINDIR\= "$CHOME" | cut -d'=' -f2-)"

if [ ! -f "$CHOME" ]; then
        echo
        echo Warning! $(tput smul)"$CHOME"$(tput rmul) was not found!
        echo The document can be found in its default state at
        echo $(tput smul)/usr/share/doc/yalpack-0.2.0/yalpack.conf.backup.$(tput rmul)
        echo
        echo Exiting now
        echo
        exit 1
fi

COUNT1=0
for v in "$HEAD" "$VARBKUP" "$ROOTHOME" "$TMP" "$SBINDIR"; do
        COUNT1=$((COUNT1 + 1))
        COUNT2=0
        [ -z "$v" ] && echo && echo '   'One or more variables in $(tput smul)"$CHOME"$(tput rmul) is missing, contains a space, or is not && echo '   'an absolute file path. Exiting now. && echo && exit 1
        [ -n "$(echo "$v" | grep ' ')" ] && echo && echo '      'One or more variables in $(tput smul)"$CHOME"$(tput rmul) is missing, contains a space, or is not && echo '	'an absolute file path. Exiting now. && echo && exit 1
	[ "$(echo "$v" | cut -c1)" != "/" ] && echo && echo '	'One or more variables in $(tput smul)"$CHOME"$(tput rmul) is missing, contains a space, or is not && echo '	'an absolute file path. Exiting now. && echo && exit 1
	for y in "$HEAD" "$VARBKUP" "$ROOTHOME" "$TMP" "$SBINDIR"; do
                COUNT2=$((COUNT2 + 1))
                if [ "$v" = "$y" ] && [ "$COUNT1" != "$COUNT2" ]; then
                        echo '  '$(tput smul)Warning!$(tput rmul) Two of the current variables have the same value.
                        echo '  'Exiting now. Please edit $(tput smul)"$CHOME"$(tput rmul).
                        echo
                        exit 1
                fi
        done
done

PKGDATA="$HEAD"/pkgdata
VERS="$PKGDATA"/VER
TREES="$PKGDATA"/TREES

full() {
find "$TREES"/* -maxdepth 0 | while read -r file;
do
	[ -n "$1" ] && head -n 1 "$file" | grep "$1"
	[ -z "$1" ] && head -n 1 "$file"
done
echo
}

nameonly() {
find "$TREES"/* -maxdepth 0 | while read -r file;
do
	g="$(basename "$file")"
	if [ -n "$g" ]; then
		[ -n "$1" ] && echo "$g" | grep "$1"
		[ -z "$1" ] && echo "$g"
	fi
done
echo
}

unset NAME
echo
[ -z "$1" ] && full && exit
for arg in "$@"; do
	case "$arg" in
		-h|--help)
		echo
		echo $(tput smul)pkglist$(tput rmul): Show a list of installed yalpack packages \(search functionality available\).
		echo
		echo Syntax: pkglist \(options\) \(SEARCHTERM1 SEARCHTERM2 ... \)
		echo
		echo If SEARCHTERM is used, pkglist will filter results through grep automatically.
		echo
		echo Flags:
		echo " -n | --name : Return names only, rather than names and version numbers."
		echo " -h | --help : Display this help menu."
		echo
		exit
		;;
		-n|--name)
		[ -n "$2" ] && NAME=NAME
		[ -z "$2" ] && nameonly && exit
		;;
		*)
		[ "$NAME" != "NAME" ] && full "$arg"
		[ "$NAME" = "NAME" ] && nameonly "$arg"
	esac
done
