#!/bin/sh
#
# pkgremove: to remove packages (made by pkgmake and installed by pkginst) from LFS systems
#
# Copyright 2021 K. Eugene Carlson  Tsukuba, Japan
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Used to remove packages. HANDLE WITH CARE.

STAGING=/var/yalpack/packages
PKGDIR=$STAGING/"$1"
PKGDEST=$PKGDIR/dest
DATA=/var/yalpack/pkgdata
PKGTREES=$DATA/TREES
BINS=$DATA/PKG-BINS
DEPS=$DATA/PKG-DEPS
LIBS=$DATA/PKG-LIBS
VERS=$DATA/VER

echo
echo It is advised to run pkgcheck on the package first.
echo
echo Removal of package "$1" has been requested. To proceed, press \"y\". IF YOU HAVE ANY DOUBTS, TERMINATE THE PROCESS NOW.
read -r INPUT
echo
[ "$INPUT" != "y" ] && exit

set -e
mkdir -p "$DATA"
cd $STAGING
[ ! -d $STAGING/"$1" ] && tar -xf $STAGING/"$1".tar.xz
NAME=$(cat "$PKGDIR"/NAME)

# Sanity check for existence of NAME file
[ -z "$NAME" ] && echo WARNING! Make a file in "$PKGDIR"/NAME with the name of the package. Process terminating now for safety. && exit

# The user/administrator is responsible for their own home partition; upgrade will not delete anything from the home directory. Removing from the package directory here will prevent the check for later deletion.
[ -d "$PKGDEST/home" ] && rm -rf "${PKGDEST:?}"/home
# Obviously, don't want to check the package to be removed; reinstall or run pkgcheck again to get data back.
rm -f $PKGTREES/"$NAME"
rm -f $VERS/"$NAME"
echo TREE and VER removed.
# Other housekeeping
rm -rf ${BINS:?}/"$NAME"
rm -rf ${DEPS:?}/"$NAME"
rm -rf ${LIBS:?}/"$NAME"
echo Other data files removed.
echo

# Checking package for matches in other installed packages. Should be safe on a package-oriented system.
for f in $(find "$PKGDEST"/* -type f,l)
do
	echo "$f"
	i="${f##$PKGDEST/}"
	# If grep -x turns up nothing, other installed packages don't need the file
	if [ -z "$(grep -x /"$i" "$PKGTREES"/*)" ]; then
		rm -fv /"$i"
		# Deleting unneeded non-.new version
		[ -f /"${i%.new}" ] && rm -fv /"${i%.new}"
	fi
done

# Process for directories
for d in $(find "$PKGDEST"/* -type d)
do
	i="${d##$PKGDEST/}"
	[ -d /"$i" ] && x="$(ls -A /"$i")"
	[ -z "$x" ] && rmdir -v --ignore-fail-on-non-empty /"$i"
done

# In case of library changes
echo Running ldconfig now...
/sbin/ldconfig || true
echo Done running ldconfig.
echo
# Cleaning up
cd "$STAGING"
rm -rf "$PKGDIR"

echo The package "$1" has been removed. 
[ "$NAME" != "yalpack" ] && echo Consider running \"liblist -n\" to update yalpack\'s dynamic library information.
echo
