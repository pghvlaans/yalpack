#!/bin/sh
#
# pkginst: installing a package on LFS systems
#
# Copyright 2021 K. Eugene Carlson  Tsukuba, Japan
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Installing a package from a source tarball

STAGING=/var/yalpack/packages
TMP=/tmp
PKGDIR=$STAGING/"$1"
PKGDATA=/var/yalpack/pkgdata
BUILDDEST=$TMP/"$1"/dest
PKGDEST=$PKGDIR/dest
PKGTREES=$PKGDATA/TREES
PKGVER=$PKGDATA/VER

echo
echo Installing package "$1"
echo
set -e
mkdir -p $STAGING
mkdir -p "$PKGDATA" "$PKGTREES" "$PKGVER"
cd $STAGING
tar -xf "$1".tar.xz
NAME=$(cat "$PKGDIR"/NAME)

cd "$PKGDEST"
# Pat Volkerding says non-755 root is dangerous, so it can't hurt.
chmod 755 "$PKGDEST"

# Non-symlinks in etc and home will be .new; check for identical/unique. Doing nothing means .new installed. (Any other file named .new manually will be checked similarly.)
find "$PKGDEST"/ -type f | while read -r f;	
do
	h="${f##$PKGDEST/}"
	i="${h%.new}"
	# Proceed if the file is .new
	if [ "$i" != "$h" ]; then
		echo Checking "$f"
		# The non-.new version will be called this, if needed
		j="${f%.new}"
		# If file exists, check for differences
		if [ -f "/$i" ]; then
			#DIFF="$(diff "$f" "/$i")"
			md5f=$(md5sum "$f" | cut -d' ' -f-1)
			md5i=$(md5sum "/$i" | cut -d' ' -f-1)
			# If not different, new file is not needed
			if [ "$md5f" = "$md5i" ]; then
				rm -fv "$f"
				echo
			else
				# If .new file will be installed, log it and show the user afterwards.
				echo "/$h" >> "$PKGDIR"/NEWFILES
				echo
			fi
		# If file DNE, don't call the new one .new
		else
			echo File does not exist on this system
			mv -v "$f" "$j"
			echo
		fi
	fi
done
echo Done copying the .new files, if any.
echo

# Copying over
find "$PKGDEST"/ -type f,d | while read -r f;
do
	i="${f##$PKGDEST/}"
	if [ -n "$i" ]; then
		echo /"$i"
		if [ -d "$i" ]; then
			mkdir -vp /"$i"
		else
			cp -v --preserve=mode,ownership,timestamps,xattr "$i" "/$i"
		fi 
	fi
done

# Handling any symlinks
find "$PKGDEST"/ -type l | while read -r f;
do
	i="${f##$PKGDEST/}"
	j=$(readlink "$i")
	# If the symlink is absolute; BUILDDEST needed to test it out.
	if echo "$j" | grep -q "$BUILDDEST"; then
		# Pointing at BUILDDEST from time of building.
		k="${j##$BUILDDEST/}"
		echo /"$i" to /"$k" >> "$PKGDIR"/SYMLINKS
		ln -sfv /"$k" /"$i"
	# If the symlink is relative
	else
		echo /"$i" to "$j" >> "$PKGDIR"/SYMLINKS
		ln -sfv "$j" /"$i"
	fi
done

echo

# Populate the TREE entry for future updating
cat "$PKGDIR"/TREE > $PKGTREES/"$NAME"

# Add version information to /var/pkgdata
mkdir -p "$PKGVER"
cat "$PKGDIR"/VER > "$PKGVER"/"$NAME"

# Run the install script, if any
if [ -f "$PKGDIR/install.sh" ]; then 
	echo Now running install.sh
	"$PKGDIR"/install.sh
	echo
fi

# Running ldconfig in case of new libraries
echo Now running ldconfig...
/sbin/ldconfig || true
echo Done running ldconfig.
echo

# For the installer's edification and to update library use info
echo
# pkgcheck should use its own error handling instead.
set +e
CHECK=no pkgcheck "$NAME"
set -e
# Clean up afterwards
cd "$STAGING"
rm -rf "${PKGDIR:?}"
echo Almost done. To retain the package tarball, enter \"y\" now.
read -r INPUT
echo
[ "$INPUT" != "y" ] && rm -vf $STAGING/"$1".tar.xz && echo

# Inform about any symlinks
if [ -f "$PKGDIR"/SYMLINKS ]; then 
	echo The following symlinks were created by the build process:
	cat "$PKGDIR"/SYMLINKS
	echo
fi

# Inform about any .new files
if [ -f "$PKGDIR"/NEWFILES ]; then
	echo The following .new files should be examined:
	cat "$PKGDIR"/NEWFILES
	echo
	echo '' >> "$PKGDATA"/NEWFILE-LOG
	echo "$1" installed on "$(date)" >> "$PKGDATA"/NEWFILE-LOG
	cat "$PKGDIR"/NEWFILES >> "$PKGDATA"/NEWFILE-LOG
	echo The list has been added to "$PKGDATA"/NEWFILE-LOG for convenience.
	echo
fi

echo Installation of "$1" complete.
echo
